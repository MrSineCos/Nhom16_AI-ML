# frontend/app.py
import streamlit as st
import requests
import os

# L·∫•y URL c·ªßa backend t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
BACKEND_URL = os.getenv("BACKEND_URL", "http://localhost:8000")

st.set_page_config(layout="wide")

def fetch_movies(endpoint):
    try:
        response = requests.get(f"{BACKEND_URL}{endpoint}")
        response.raise_for_status() # Ki·ªÉm tra l·ªói HTTP
        return response.json()
    except requests.exceptions.RequestException as e:
        st.error(f"L·ªói khi k·∫øt n·ªëi t·ªõi backend: {e}")
        return None

def main_page():
    st.title("H·ªá th·ªëng ƒë·ªÅ xu·∫•t phim")

    # --- ƒê·ªÅ xu·∫•t phim ph·ªï bi·∫øn ---
    st.header("üçø Phim Ph·ªï Bi·∫øn")
    popular_movies = fetch_movies("/api/popular_movies")
    if popular_movies:
        cols = st.columns(5)
        for i, movie in enumerate(popular_movies):
            with cols[i % 5]:
                st.subheader(movie.get("title", "Kh√¥ng r√µ"))
                # TODO: L·∫•y poster v√† hi·ªÉn th·ªã
                st.write(f"ID: {movie['id']}")

    # --- ƒê·ªÅ xu·∫•t c√° nh√¢n h√≥a ---
    st.header("üë§ Phim D√†nh Cho B·∫°n")
    user_id = st.text_input("Nh·∫≠p User ID ƒë·ªÉ nh·∫≠n ƒë·ªÅ xu·∫•t:", value="1")
    if user_id:
        recommendations = fetch_movies(f"/api/recommendations/user/{user_id}")
        if recommendations:
            cols = st.columns(5)
            for i, movie in enumerate(recommendations):
                with cols[i % 5]:
                    st.subheader(movie.get("title", "Kh√¥ng r√µ"))
                    st.write(f"ID: {movie['id']}")
        else:
            st.info(f"Kh√¥ng c√≥ ƒë·ªÅ xu·∫•t cho User ID {user_id}. Vui l√≤ng th·ª≠ User ID kh√°c.")

def similar_movies_page():
    st.title("T√¨m ki·∫øm phim t∆∞∆°ng t·ª±")
    movie_id = st.text_input("Nh·∫≠p ID phim:", value="862")
    if movie_id:
        st.subheader(f"Phim t∆∞∆°ng t·ª± v·ªõi ID: {movie_id}")
        similar_movies = fetch_movies(f"/api/similar_movies/{movie_id}")
        if similar_movies:
            cols = st.columns(5)
            for i, movie in enumerate(similar_movies):
                with cols[i % 5]:
                    st.subheader(movie.get("title", "Kh√¥ng r√µ"))
                    st.write(f"ID: {movie['id']}")
        else:
            st.warning("Kh√¥ng t√¨m th·∫•y phim n√†y ho·∫∑c kh√¥ng c√≥ phim t∆∞∆°ng t·ª±.")

# --- ƒêi·ªÅu h∆∞·ªõng trang ---
page = st.sidebar.radio("Ch·ªçn trang:", ["Trang ch·ªß", "T√¨m ki·∫øm t∆∞∆°ng t·ª±"])
if page == "Trang ch·ªß":
    main_page()
elif page == "T√¨m ki·∫øm t∆∞∆°ng t·ª±":
    similar_movies_page()
